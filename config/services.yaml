# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Service\:
        resource: '../src/Service'
        tags: ['controller.service_arguments']


    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones


    transaction_repository:
             class: App\Repository\TransactionRepository
             arguments: ["@doctrine", App\Entity\Transaction]


    HolidayDateValidator:
        class: App\Validator\Constraints\HolidayDateValidator
        arguments: ['@doctrine']
        tags:
            - { name: validator.constraint_validator, alias:      HolidayDateValidator }


    FullDateValidator:
        class: App\Validator\Constraints\FullDateValidator
        arguments: ['@doctrine']
        tags:
            - { name: validator.constraint_validator, alias:      FullDateValidator }


    WeeklyClosingValidator:
        class: App\Validator\Constraints\WeeklyClosingValidator
        arguments: ['@doctrine']
        tags:
            - { name: validator.constraint_validator, alias:      WeeklyClosingValidator }


    TodayEveningValidator:
        class: App\Validator\Constraints\TodayEveningValidator
        arguments: ['@doctrine']
        tags:
            - { name: validator.constraint_validator, alias:      TodayEveningValidator }

    WithoutReservationDateValidator:
        class: App\Validator\Constraints\WithoutReservationDateValidator
        arguments: ['@doctrine']
        tags:
            - { name: validator.constraint_validator, alias:      WithoutReservationDateValidator }


    TransactionDataRecovery:
            class: App\Service\TransactionDataRecovery
            arguments: ["@requestStack", "@entityManagerInterface"]


    PriceAward:
            class: App\Service\PriceAward
            arguments: ["@doctrine"]

#    AppExtension:
#              class: App\Twig\AppExtension
#              tags:
#                - { name : twig.extension }

    PaymentStatusAction:
            class: App\Service\PaymentStatusAction
            arguments: ["@doctrine"]